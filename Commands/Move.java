package org.usfirst.frc2408.robot.commands;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc2408.robot.Robot;

/**
 *
 */
public class Move extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public Move() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.drive);

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	double LeftY = Robot.oi.stick.getRawAxis(1);
    	double LeftX = Robot.oi.stick.getRawAxis(0);
    	
    	
		if (LeftY < 0) {
			LeftY *= LeftY;
			LeftY *= -1;
		} else {
			LeftY *= LeftY;
		}
    	
		Robot.drive.lBM.set(Math.max ( - 1, Math.min ( 1, (LeftY + LeftX))));
		Robot.drive.rBM.set(Math.max ( - 1, Math.min ( 1, (LeftY - LeftX))));
		Robot.drive.lFM.set(Math.max ( - 1, Math.min ( 1, (LeftY + LeftX))));
		Robot.drive.rFM.set(Math.max ( - 1, Math.min ( 1, (LeftY - LeftX))));
    	
    	
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
